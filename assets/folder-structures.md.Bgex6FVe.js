import{_ as a,c as s,o as t,ae as r}from"./chunks/framework.oSdz25v6.js";const h=JSON.parse('{"title":"Estructuras de Carpetas","description":"","frontmatter":{},"headers":[],"relativePath":"folder-structures.md","filePath":"folder-structures.md"}'),n={name:"folder-structures.md"};function o(i,e,c,l,d,p){return t(),s("div",null,e[0]||(e[0]=[r(`<p>Por: <a href="https://github.com/ecanquiz" target="_blank" rel="noreferrer">Ernesto Canquiz</a></p><h1 id="estructuras-de-carpetas" tabindex="-1">Estructuras de Carpetas <a class="header-anchor" href="#estructuras-de-carpetas" aria-label="Permalink to &quot;Estructuras de Carpetas&quot;">​</a></h1><p>La estructura de carpetas es fundamental para organizar los archivos y componentes de una aplicación.</p><blockquote><p>Aunque no influye directamente en la funcionalidad del proyecto, que depende de la lógica del código fuente, una estructura bien definida mejora notablemente la legibilidad y escalabilidad del mismo.</p></blockquote><h2 id="estructuras-basica" tabindex="-1">Estructuras Básica <a class="header-anchor" href="#estructuras-basica" aria-label="Permalink to &quot;Estructuras Básica&quot;">​</a></h2><p>A continuación, se presenta un ejemplo de la estructura básica de carpetas de un proyecto <a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue</a>, siguiendo convenciones comunes:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──assets/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──components/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──router/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──store/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └──views/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Es importante señalar que la carpeta <code>views/</code> también puede denominarse <code>pages/</code>. Estas variaciones en la nomenclatura son cuestiones de preferencia y no afectan la funcionalidad. La decisión sobre el nombre a utilizar debe ser consensuada por el equipo de desarrollo.</p></div><blockquote><p>Tenga en cuenta que solo haremos referencia a la carpeta <code>src/</code>, que significa &quot;source&quot; y contiene el código fuente del proyecto, como archivos de código, componentes y otros recursos necesarios para el desarrollo de la aplicación. Por lo tanto, no se considerarán las carpetas <code>node_module/</code>, <code>dist/</code>, <code>build/</code> ni otras.</p></blockquote>`,9)]))}const m=a(n,[["render",o]]);export{h as __pageData,m as default};
