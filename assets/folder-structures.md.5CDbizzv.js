import{_ as s,c as e,o as i,ae as t}from"./chunks/framework.oSdz25v6.js";const h=JSON.parse('{"title":"Estructuras de Carpetas","description":"","frontmatter":{},"headers":[],"relativePath":"folder-structures.md","filePath":"folder-structures.md"}'),n={name:"folder-structures.md"};function r(l,a,c,o,p,d){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="estructuras-de-carpetas" tabindex="-1">Estructuras de Carpetas <a class="header-anchor" href="#estructuras-de-carpetas" aria-label="Permalink to &quot;Estructuras de Carpetas&quot;">​</a></h1><p>La estructura de carpetas es fundamental para organizar los archivos y componentes de una aplicación.</p><blockquote><p>Aunque no influye directamente en la funcionalidad del proyecto, que depende de la lógica del código fuente, una estructura bien definida mejora notablemente la legibilidad y escalabilidad del mismo.</p></blockquote><h2 id="estructuras-basica" tabindex="-1">Estructuras Básica <a class="header-anchor" href="#estructuras-basica" aria-label="Permalink to &quot;Estructuras Básica&quot;">​</a></h2><p>A continuación, se presenta un ejemplo de la estructura básica de carpetas de un proyecto Vue, siguiendo convenciones comunes:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> components/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> router/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> views/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Es importante señalar que la carpeta <code>views/</code> también puede denominarse <code>pages/</code>. Estas variaciones en la nomenclatura son cuestiones de preferencia y no afectan la funcionalidad. La decisión sobre el nombre a utilizar debe ser consensuada por el equipo de desarrollo.</p></div>`,7)]))}const k=s(n,[["render",r]]);export{h as __pageData,k as default};
